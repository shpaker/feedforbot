[tool.poetry]
name = "FeedForBot"
version = "0.1.0"
description = "Forward links from RSS/Atom feeds to messengers"
authors = ["Aleksandr Shpak <shpaker@gmail.com>"]
readme = "README.md"
homepage = "https://github.com/shpaker/feedforbot"
repository = "https://github.com/shpaker/feedforbot"

[tool.poetry.scripts]
feedforbot = 'feedforbot.cli:main'

[tool.poetry.dependencies]
python = ">=3.10"
aiocron = "^1.8"
aiofiles = "^23.2.1"
beautifulsoup4 = "^4.12.2"
click = "^8.1.7"
feedparser = "^6.0.10"
httpx = "^0.25.1"
jinja2 = "^3.1.2"
orjson = "^3.9.10"
pydantic = "^2.5.0"
pyyaml = "^6.0.1"
sentry-sdk = "^1.35.0"

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.5.0"

[tool.poetry.group.linters.dependencies]
bandit = "^1.7.5"
black = "^23.11.0"
isort = "^5.12.0"
mypy = "^1.7.0"
ruff = "^0.1.5"
safety = "^2.3.5"
types-aiofiles = "^23.2.0"
types-beautifulsoup4 = "^4.12.0.7"
types-pyyaml = "^6.0.12"

[tool.poetry.group.tests.dependencies]
freezegun = "^1.2.2"
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
respx = "^0.20.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 79
src_paths = ["feedforbot", "tests"]
skip = [".mypy_cache", ".pytest_cache", "venv"]

[tool.mypy]
python_version = 3.10
plugins = [
  "pydantic.mypy"
]
follow_imports = "silent"
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true
disallow_untyped_defs = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[[tool.mypy.overrides]]
module = ["feedparser.*", "aiocron"]
ignore_missing_imports = true

[tool.black]
line-length = 79
verbose = 1
color = true
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.mypy_cache
    | \.pytest_cache
    | \.venv
  )/
)
'''

[tool.ruff]
target-version = "py310"
line-length = 120
exclude = [
  ".venv",
]
select = [
   "F",  # Pyflakes
   "E",  # pycodestyle
 "C90",  # mccabe
#   "I",  # isort
#   "N",  # pep8-naming
#   "D",  # pydocstyle
  "UP",  # pyupgrade
 "YTT",  # flake8-2020
# "ANN",  # flake8-annotations
#   "S",  # flake8-bandit
 "BLE",  # flake8-blind-except
# "FBT",  # flake8-boolean-trap
   "B",  # flake8-bugbear
#   "A",  # flake8-builtins
 "COM",  # flake8-commas
  "C4",  # flake8-comprehensions
 "DTZ",  # flake8-datetimez
 "T10",  # flake8-debugger
#  "EM",  # flake8-errmsg
 "EXE",  # flake8-executable
 "ISC",  # flake8-implicit-str-concat
# "ICN",  # flake8-import-conventions
   "G",  # flake8-logging-format
 "INP",  # flake8-no-pep420
# "PIE",  # flake8-pie
 "T20",  # flake8-print
#  "PT",  # flake8-pytest-style
#   "Q",  # flake8-quotes
 "RET",  # flake8-return
 "SIM",  # flake8-simplify
 "TID",  # flake8-tidy-imports
 "TCH",  # flake8-type-checking
 "ARG",  # flake8-unused-arguments
 "PTH",  # flake8-use-pathlib
 "ERA",  # eradicate
#  "PD",  # pandas-vet
# "PGH",  # pygrep-hooks
  "PL",  # Pylint
 "TRY",  # tryceratops
 "RSE",  # flake8-raise
 "SLF",  # flake8-self
 "RUF",  # Ruff-specific rules
]

[tool.ruff.mccabe]
max-complexity = 20
